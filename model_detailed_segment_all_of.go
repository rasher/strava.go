/*
 * Strava API v3
 *
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * API version: 3.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package strava
import (
	"time"
)
// DetailedSegmentAllOf struct for DetailedSegmentAllOf
type DetailedSegmentAllOf struct {
	// The time at which the segment was created.
	CreatedAt time.Time `json:"created_at,omitempty"`
	// The time at which the segment was last updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`
	// The segment's total elevation gain.
	TotalElevationGain float32 `json:"total_elevation_gain,omitempty"`
	Map PolylineMap `json:"map,omitempty"`
	// The total number of efforts for this segment
	EffortCount int32 `json:"effort_count,omitempty"`
	// The number of unique athletes who have an effort for this segment
	AthleteCount int32 `json:"athlete_count,omitempty"`
	// Whether this segment is considered hazardous
	Hazardous bool `json:"hazardous,omitempty"`
	// The number of stars for this segment
	StarCount int32 `json:"star_count,omitempty"`
}
